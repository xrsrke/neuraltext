# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_dataset.ipynb.

# %% auto 0
__all__ = ['NeuralCharacterDataset', 'NeuralSentenceDataset']

# %% ../nbs/05_dataset.ipynb 4
import re
from typing import Optional, List, Tuple, Set

import torch
from torch.utils.data import Dataset
from torchtyping import TensorType

from .utils import mat2dict

# %% ../nbs/05_dataset.ipynb 7
class NeuralCharacterDataset(Dataset):
    def __init__(self, data: dict):
        xs = []
        ys = []
        vocabs = set()
        for letter, items in data.items():
            vocabs.add(letter)
            
            for item in items:
                xs.append(letter)
                ys.append(torch.tensor(item))
        
        self.xs: List[str] = xs
        self.ys = ys
        self.vocabs: Set[str] = vocabs
    
    def __len__(self) -> int:
        return len(self.ys)

    def __getitem__(self, index) -> Tuple[int, TensorType['n_step', 'n_channel']]:
        return self.xs[index], self.ys[index]

# %% ../nbs/05_dataset.ipynb 8
class NeuralSentenceDataset(Dataset):
    def __init__(self):
        pass
